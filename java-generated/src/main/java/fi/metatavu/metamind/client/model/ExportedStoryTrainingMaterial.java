/*
 * Metamind API
 * Brain spec for Metamind.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.metamind.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.metatavu.metamind.client.model.TrainingMaterialType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.UUID;

/**
 * ExportedStoryTrainingMaterial
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-10T13:55:11.126+02:00[Europe/Helsinki]")public class ExportedStoryTrainingMaterial {

  @JsonProperty("id")

  private UUID id = null;

  @JsonProperty("type")

  private TrainingMaterialType type = null;

  @JsonProperty("text")

  private String text = null;

  @JsonProperty("name")

  private String name = null;

  @JsonProperty("visibility")

  private String visibility = null;
  public ExportedStoryTrainingMaterial id(UUID id) {
    this.id = id;
    return this;
  }

  

  /**
  * training material id.
  * @return id
  **/
  @Schema(description = "training material id.")
  public UUID getId() {
    return id;
  }
  public void setId(UUID id) {
    this.id = id;
  }
  public ExportedStoryTrainingMaterial type(TrainingMaterialType type) {
    this.type = type;
    return this;
  }

  

  /**
  * Get type
  * @return type
  **/
  @Schema(required = true, description = "")
  public TrainingMaterialType getType() {
    return type;
  }
  public void setType(TrainingMaterialType type) {
    this.type = type;
  }
  public ExportedStoryTrainingMaterial text(String text) {
    this.text = text;
    return this;
  }

  

  /**
  * Get text
  * @return text
  **/
  @Schema(required = true, description = "")
  public String getText() {
    return text;
  }
  public void setText(String text) {
    this.text = text;
  }
  public ExportedStoryTrainingMaterial name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public ExportedStoryTrainingMaterial visibility(String visibility) {
    this.visibility = visibility;
    return this;
  }

  

  /**
  * Get visibility
  * @return visibility
  **/
  @Schema(required = true, description = "")
  public String getVisibility() {
    return visibility;
  }
  public void setVisibility(String visibility) {
    this.visibility = visibility;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportedStoryTrainingMaterial exportedStoryTrainingMaterial = (ExportedStoryTrainingMaterial) o;
    return Objects.equals(this.id, exportedStoryTrainingMaterial.id) &&
        Objects.equals(this.type, exportedStoryTrainingMaterial.type) &&
        Objects.equals(this.text, exportedStoryTrainingMaterial.text) &&
        Objects.equals(this.name, exportedStoryTrainingMaterial.name) &&
        Objects.equals(this.visibility, exportedStoryTrainingMaterial.visibility);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, type, text, name, visibility);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportedStoryTrainingMaterial {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
