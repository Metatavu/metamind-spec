/*
 * Metamind API
 * Brain spec for Metamind.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.metamind.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.UUID;

/**
 * Session
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-02-10T13:55:11.126+02:00[Europe/Helsinki]")public class Session {

  @JsonProperty("id")

  private UUID id = null;

  @JsonProperty("locale")

  private String locale = null;

  @JsonProperty("timeZone")

  private String timeZone = null;

  @JsonProperty("visitor")

  private String visitor = null;

  @JsonProperty("storyId")

  private UUID storyId = null;

  @JsonProperty("createdAt")

  private OffsetDateTime createdAt = null;

  @JsonProperty("modifiedAt")

  private OffsetDateTime modifiedAt = null;
  /**
  * Session id.
  * @return id
  **/
  @Schema(description = "Session id.")
  public UUID getId() {
    return id;
  }
  public Session locale(String locale) {
    this.locale = locale;
    return this;
  }

  

  /**
  * Session locale
  * @return locale
  **/
  @Schema(required = true, description = "Session locale")
  public String getLocale() {
    return locale;
  }
  public void setLocale(String locale) {
    this.locale = locale;
  }
  public Session timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  

  /**
  * Session time zone
  * @return timeZone
  **/
  @Schema(required = true, description = "Session time zone")
  public String getTimeZone() {
    return timeZone;
  }
  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }
  public Session visitor(String visitor) {
    this.visitor = visitor;
    return this;
  }

  

  /**
  * Visitor details
  * @return visitor
  **/
  @Schema(required = true, description = "Visitor details")
  public String getVisitor() {
    return visitor;
  }
  public void setVisitor(String visitor) {
    this.visitor = visitor;
  }
  /**
  * Story id
  * @return storyId
  **/
  @Schema(description = "Story id")
  public UUID getStoryId() {
    return storyId;
  }
  /**
  * Creation time
  * @return createdAt
  **/
  @Schema(description = "Creation time")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  /**
  * Last modification time
  * @return modifiedAt
  **/
  @Schema(description = "Last modification time")
  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Session session = (Session) o;
    return Objects.equals(this.id, session.id) &&
        Objects.equals(this.locale, session.locale) &&
        Objects.equals(this.timeZone, session.timeZone) &&
        Objects.equals(this.visitor, session.visitor) &&
        Objects.equals(this.storyId, session.storyId) &&
        Objects.equals(this.createdAt, session.createdAt) &&
        Objects.equals(this.modifiedAt, session.modifiedAt);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, locale, timeZone, visitor, storyId, createdAt, modifiedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Session {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    visitor: ").append(toIndentedString(visitor)).append("\n");
    sb.append("    storyId: ").append(toIndentedString(storyId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
